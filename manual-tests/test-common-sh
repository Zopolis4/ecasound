# ----------------------------------------------------------------------
# File: ecasound/manual-tests/test-common-sh
# License: GPL (see ecasound/{AUTHORS,COPYING})
# ----------------------------------------------------------------------

function error_exit() {
  echo "ERROR: Test failure, exiting."
  exit 1
}

function check_ecabin() {
  if [ ! -e $TESTECASOUND ] ; then
    echo "Ecasound binary not found."
    error_exit
  fi
}

function set_ecasound_envvar() {
  if test "x$TESTECASOUND" = "x"; then
    if test -e "../ecasound/ecasound_debug" ; then
      TESTECASOUND="../ecasound/ecasound_debug"
    else
      TESTECASOUND="../ecasound/ecasound"
    fi
  fi 
}

function check_md5sum() {
  set +x
  if test "`md5sum $1 |cut -f1 -d' '`" != "$2" ; then
    echo -e "\n\nWARNING: md5sum did not match (not necessarily an error, but"
    echo -e "needs to be manually verified). Define SKIP_MD5SUM=1 to ignore md5 errors.\n"
    if test "x$SKIP_MD5SUM" != "x1"; then
      error_exit
    fi
  fi
  set -x
}

function check_filesize() {
  set +x
  if test "`stat --format=%s $1`" != "$2" ; then
    echo -e "\n\nWARNING: size did not match (not necessarily an error, but"
    echo -e "\tneeds to be manually verified).\n"
    if test "x$SKIP_FILESIZE_CHECK" != "x1"; then
      error_exit
    fi
  fi
  set -x
}

# a very rough way to check whether newly
# created audio file has similar content than
# the orignal: count how many positive samples 
# went above -1dB
#
function check_1dbpeak_count() {
  set -x
  count=`ecasound -i $1 -o null -ev |grep "Pos -1.0" |cut -d':' -f2 |cut -d',' -f1 |cut -c4-`
  if test $count != $2 ; then
   echo -e "\n\nWARNING: peak count samples didt match (not necessarily an error, but"
    echo -e "\tneeds to be manually verified).\n"
    if test "x$SKIP_1DBPEAK_CHECK" != "x1"; then
      error_exit
    fi
   fi
  set -x
}
